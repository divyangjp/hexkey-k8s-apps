---
apiVersion: install.istio.io/v1alpha1
kind: IstioOperator
spec:
  profile: default
    meshConfig:
      enableTracing: true
      accessLogFile: "/dev/stdout"
      accessLogEncoding: JSON
  addonComponents:
    grafana:
      enabled: true
      k8s:
        replicaCount: 1
    prometheus:
      enabled: true
      k8s:
        replicaCount: 1
    kiali:
      enabled: true
      k8s:
        replicaCount: 1
    tracing:
      enabled: true

  components:
    ingressGateways:
    - name: istio-ingressgateway
      enabled: true
      label:
        app: istio-ingressgateway
        istio: ingressgateway
      k8s:
        service:
          type: ClusterIP
          ports:
          - {name: status-port, port: 15021, targetPort: 15021}
          - {name: http2,       port: 80,    targetPort: 8080}
        serviceAnnotations:
          cloud.google.com/backend-config: '{"default": "ingress"}'
          cloud.google.com/neg: '{"ingress": true}'
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 40
              podAffinityTerm:
                labelSelector:
                  matchLabels: {app: istio-ingressgateway}
                namespaces: ["istio-system"]
                topologyKey: "kubernetes.io/hostname"
            - weight: 40
              podAffinityTerm:
                labelSelector:
                  matchLabels: {app: istio-ingressgateway}
                namespaces: ["istio-system"]
                topologyKey: "topology.kubernetes.io/zone"

  values:
    global:
      imagePullPolicy: Always
      defaultNodeSelector:
        beta.kubernetes.io/os: linux

    telemetry:
      v2:
        prometheus:
          enabled: true

    pilot:
      traceSampling: 100

    kiali:
      dashboard:
        auth:
          strategy: anonymous
